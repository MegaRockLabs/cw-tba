{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Query all accounts in the registry in descending order",
      "type": "object",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "Limit how many accounts to return",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "skip": {
              "description": "Number of accounts to skip [NOTE]: Not same as `start_after`",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Query accounts linked to a token of a specific collection in descending order",
      "type": "object",
      "required": [
        "collection_accounts"
      ],
      "properties": {
        "collection_accounts": {
          "type": "object",
          "required": [
            "collection"
          ],
          "properties": {
            "collection": {
              "description": "Contract address of the collection",
              "type": "string"
            },
            "limit": {
              "description": "Limit how many accounts to return",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "skip": {
              "description": "Number of accounts to skip",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Query all the collections the registry is aware of",
      "type": "object",
      "required": [
        "collections"
      ],
      "properties": {
        "collections": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "Limit how many collections to return",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "skip": {
              "description": "Number of collections to skip",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Query params of the registry",
      "type": "object",
      "required": [
        "registry_params"
      ],
      "properties": {
        "registry_params": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "account_info"
      ],
      "properties": {
        "account_info": {
          "$ref": "#/definitions/AccountQuery_for_TokenInfo"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AccountQuery_for_TokenInfo": {
      "type": "object",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "$ref": "#/definitions/TokenInfo"
        }
      },
      "additionalProperties": false
    },
    "TokenInfo": {
      "type": "object",
      "required": [
        "collection",
        "id"
      ],
      "properties": {
        "collection": {
          "description": "Contract address of the collection",
          "type": "string"
        },
        "id": {
          "description": "Token id",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
